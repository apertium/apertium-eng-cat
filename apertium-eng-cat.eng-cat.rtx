! POS

n: _.gender.number ;
np: _.np_type.gender.number ;
det: _.det_type.gender.number ;
prn: _.prn_type.person.gender.number ;
prpers: _.prn_type.person.gender.number ;
adj: _.adj_type.gender.number ;
num: _.gender.number ;
num_digits: _ ;
adv: _ ;
vblex: _.tense.person.number ;
vbser: _.tense.person.number ;
vbhaver: _.tense.person.number ;
vbmod: _.tense.person.number ;
vb_pp: _.tense.gender.number ;
vb_infger: _.tense ;
cnjcoo: _ ;
cm: _ ;

SN: _.SN_det.person.gender.number ;
SDet: _.det_type.gender.number ;
SAdj: _.adj_type.gender.number ;
SNum: _.gender.number ;
SAdv: _ ;
SV: _.vb_type.vb_cnj.tense.person.number ;

PV: _;



! Attributes

gender = (GD m) m f nt @mf GD ;
number = (ND sg) sg pl @sp ND ;
person = (PD p3) p1 p2 p3 PD ;
tense = pres pri past ifip pii fti cni imp inf ger pp ;
separable = sep ;
det_type = def ind pos qnt dem itg ;
adj_type = ind ord pos qnt itg ;
prn_type = tn itg pro ;
np_type = al org top ant cog ;
vb_type = vblex vbser vblike ;
vb_cnj = cnj impers ;
SN_det = undet det predet nodet prnsubj ;



! Rules

SN ->   0: n
                [$SN_det=undet,$gender=(if(1.gender not=mf) 1.gender else GD),$number=(if(1.number not=sp) 1.number else ND)]
                { %1 } |
        10: n n
                [$SN_det=undet,$gender=(if(2.gender not=mf) 2.gender else GD),$number=(if(2.number not=sp) 2.number else ND)]
                { %2 _1 de@pr _ 1 } |


        0: %np.ant
                [$SN_det=undet]
                { %1 } |
        0: np.cog
                [$SN_det=undet,$number=(if(1.number/sl=pl) 1.number/sl else ND)]
                { %1 } |
        0: %np.top
                [$SN_det=undet]
                { %1 } |
        0: %np.al
                [$SN_det=undet]
                { %1 } |


        2: SDet %SN.undet
                [$SN_det=det]
                { %1 _1 %2 } |
        3: SNum %SN.undet
                [$SN_det=undet]
                { %1 _1 %2 } |
        3: SAdj %SN.undet
                [$SN_det=undet]
                { %2 _1 %1 } |
        4: SAdj.ord %SN.undet
                [$SN_det=undet]
                { %1 _1 %2 } |

        5: SN cnjcoo SN
                [$SN_det=1.det_type,$gender=(if(1.gender = 3.gender) 1.gender else m),$number=pl]
                { 1 _1 2 _2 3 } |

        1: SN gen %SN.undet
                [$SN_det=det]
                { el@det.def.$gender.$number _ 3 _ de@pr _2 1 } |

        0: %prn
                [$SN_det=nodet,$gender=(if(1.gender not=mf) 1.gender else GD),$number=(if(1.number not=sp) 1.number else ND)]
                { %1 } |
        1: %prn.subj
                [$SN_det=prnsubj,$gender=(if(1.gender not=mf) 1.gender else GD),$number=(if(1.number not=sp) 1.number else ND)]
                { %1(prpers) } |

        5: SNum %year@n.pl old@adj
                [$lem=years_old,$SN_det=nodet]
                { 1 _1 2 } ;



SDet -> 0: det.$lem.$det_type.$gender.$number
                { %1 } ;



SAdj -> 1: %adj
                [$gender=(if(1.gender not=mf) 1.gender else GD),$number=(if(1.number not=sp) 1.number else ND)]
                { %1 } |
        2: %adj enough@adv
                [$gender=(if(1.gender not=mf) 1.gender else GD),$number=(if(1.number not=sp) 1.number else ND)]
                { 2 _1 %1 } |
        2: %adj cnjcoo adj
                [$gender=(if(1.gender not=mf) 1.gender else GD),$number=(if(1.number not=sp) 1.number else ND)]
                { %1 _1 2 _2 %3[adj_type=3.adj_type] } |
        2: %adj cm adj
                [$gender=(if(1.gender not=mf) 1.gender else GD),$number=(if(1.number not=sp) 1.number else ND)]
                { %1 _1 2 _2 %3[adj_type=3.adj_type] } ;



SNum -> 0: %num
                { (if($number not = sp) 1(num_digits) else %1) } ;



SV ->   1: %vblex.*.pres
                [$vb_cnj=cnj,$tense=pri]
                { %1 } |
        1: %vbser.*.pres
                [$vb_cnj=cnj,$tense=pri]
                { %1 } |
        1: %vblex.*.past
                [$vb_cnj=cnj,$tense=ifip]
                { anar@vaux.$person.$number _ 1(vb_infger)[tense=inf] } |
        1: %vbser.*.past
                [$vb_cnj=cnj,$tense=pii]
                { %1 } |
        1: %vblex.*.imp
                [$vb_cnj=cnj]
                { %1 } |

        2: vbser.*.pres %SV.vblex.impers.ger
                [$vb_cnj=cnj,$tense=pri]
                { %2 } |
        2: vbser.*.past %SV.vblex.impers.ger
                [$vb_cnj=cnj,$tense=pii]
                { %2 } |

        1: will@vbmod.pres %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=fti]
                { %2 } |
        1: will@vbmod.past %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=cni]
                { %2 } |
        1: shall@vbmod.pres %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=fti]
                { %2 } |
        1: shall@vbmod.past %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=cni]
                { %1 _1 2 } |
        1: can@vbmod.pres %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=pri]
                { %1 _1 2 } |
        1: can@vbmod.past %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=cni]
                { %1 _1 2 } |
        1: must@vbmod.pres %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=pri]
                { %1 _1 2 } |
        1: may@vbmod.pres %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=pri]
                { %1 _1 2 } |
        1: might@vbmod.pres %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=cni]
                { %1 _1 2 } |


        1: %vblex.*.inf
                [$vb_cnj=impers]
                ( if($vb_cnj=impers) { %1(vb_infger) } else { %1 } ) |
        1: %vbser.*.inf
                [$vb_cnj=impers]
                ( if($vb_cnj=impers) { %1(vb_infger) } else { %1 } ) |
        1: %vblex.*.ger
                [$vb_cnj=impers]
                ( if($vb_cnj=impers) { %1(vb_infger) } else { %1 } ) |
        1: %vbser.*.ger
                [$vb_cnj=impers]
                ( if($vb_cnj=impers) { %1(vb_infger) } else { %1 } ) |
        1: %vblex.*.pprs
                [$vb_cnj=impers,$tense=ger]
                { %1(vb_infger) } |
        1: %vbser.*.pprs
                [$vb_cnj=impers,$tense=ger]
                { %1(vb_infger) } |
        1: %vblex.*.subs
                [$vb_cnj=impers,$tense=inf]
                { %1(vb_infger) } |
        1: %vbser.*.subs
                [$vb_cnj=impers,$tense=inf]
                { %1(vb_infger) } |
        1: %vblex.pp
                [$vb_cnj=impers]
                { %1(vb_pp) } |
        1: %vbser.pp
                [$vb_cnj=impers]
                { %1(vb_pp) } |

        2: vbhaver.inf %SV.*.impers.pp
                [$tense=inf]
                ( if($vb_cnj=impers) { %1(vb_infger) _1 2 } else { %1 _1 2 } ) |

        2: estar@SV.vblex.impers.inf %SV.vblex.impers.ger
                [$tense=inf]
                ( if($vb_cnj=impers) { %1(vb_infger) _1 2(vb_infger) } else { %1 _1 2(vb_infger) } ) |

        2: estar@SV.vblex.impers.pp %SV.vblex.impers.ger
                [$tense=pp]
                ( if($vb_cnj=impers) { %1(vb_infger) _1 2(vb_infger) } else { %1 _1 2(vb_infger) } ) |

        2: vbdo.pres.*.itg %vblex.*.inf
                [$vb_cnj=cnj,$tense=pri]
                { %2 } |
        2: vbdo.past.itg %vblex.*.inf
                [$vb_cnj=cnj,$tense=ifip]
                { anar@vaux.$person.$number _ 2(vb_infger)[tense=inf] } |

        1: vbdo.pres %vblex.*.inf
                [$vb_cnj=cnj,$tense=pri]
                { sí@adv _ que@cnjsub _ %2 } |
        1: vbdo.past %vblex.*.inf
                [$vb_cnj=cnj,$tense=ifip]
                { sí@adv _ que@cnjsub _ anar@vaux.$person.$number _ 2(vb_infger)[tense=inf] } |

        2: SAdv %SV
                { 1 _1 %2 } |
        3: mai@SAdv %SV
                { no@adv _1 %2 _ 1 } |

        1: %SV SNum
                { en@prn.pro.adv _ %1 _1 2 } ;



SAdv SV -> 2: will@vbmod.pres SAdv %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=fti]
                { 2 _2 { %3 } } |
        2: will@vbmod.past SAdv %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=cni]
                { 2 _2 { %3 } } |
        2: shall@vbmod.pres SAdv %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=fti]
                { 2 _2 { %3 } } |
        2: shall@vbmod.past SAdv %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=cni]
                { 2 _2 { %1 _1 3 } } |
        2: vbhaver.inf SAdv %SV.*.impers.pp
                [$tense=inf]
                { 2 _2 ( if($vb_cnj=impers) { %1(vb_infger) _1 3 } else { %1 _1 3 } ) } ;



SN SV -> 2: will@vbmod.pres SN %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=fti]
                { 2 _2 { %3 } } |
        2: will@vbmod.past SN %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=cni]
                { 2 _2 { %3 } } |
        2: shall@vbmod.pres SN %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=fti]
                { 2 _2 { %3 } } |
        2: shall@vbmod.past SN %SV.*.impers.inf
                [$vb_cnj=cnj,$tense=cni]
                { 2 _2 { %1 _1 3 } } ;



SAdv -> 0: %adv
                { %1 } |
        0: SN ago@adv
                { fer@vblex.pri.p3.sg _1 1 } ;



PV ->   1: SN SV.*.cnj
                { (if(1.SN_det not= prnsubj) [ 1 _1 ] ) 2[person=1.person,number=1.number] } |
        2: SN SV.*.cnj SAdj
                { (if(1.SN_det not= prnsubj) [ 1 _1 ] ) 2[person=1.person,number=1.number] _2 3[gender=1.gender,number=1.number] } ;






FALLBACK: _;
NONEXISTENT: _;
FALLBACK -> SAdj cm NONEXISTENT {} ;
FALLBACK -> SAdj cnjcoo NONEXISTENT {} ;
FALLBACK -> SV SV NONEXISTENT {} ;
